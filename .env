# .env

# Your secret Google AI API key.
# Do NOT share this file or commit it to version control.
GOOGLE_API_KEY="AIzaSy...Your...Secret...Key"

# The port the server will run on (optional, defaults to 3000)
PORT=3000


### 4. איך להריץ את השרת

כדי להריץ את השרת הזה, אתה צריך סביבת Node.js על המחשב שלך או על שרת אירוח.

**הרצה מקומית (על המחשב שלך):**

1.  **התקן את Node.js:** אם אין לך, הורד והתקן אותו מהאתר [nodejs.org](https://nodejs.org/).
2.  **צור תיקייה חדשה** לפרויקט, והכנס לתוכה את 3 הקבצים שיצרתי (`package.json`, `server.js`, `.env`).
3.  **פתח טרמינל** (Command Prompt, PowerShell, או Terminal) בתיקייה זו.
4.  **התקן את התלויות:** הרץ את הפקודה הבאה. היא תקרא את `package.json` ותתקין את כל מה שהשרת צריך.
    ```bash
    npm install
    5.  **הפעל את השרת:**
    ```bash
    npm start
    
אם הכל תקין, תראה את ההודעה: `Server is running on http://localhost:3000`.

**הרצה על שרת אירוח (Deployment):**

כדי שה-Mini App שלך תוכל לתקשר עם השרת מכל מקום, תצטרך לארח אותו בשירותי ענן. פלטפורמות כמו **Render** או **Fly.io** מציעות תוכניות חינמיות שמתאימות מאוד לפרויקטים כאלה ומקלות על תהליך הפריסה (deployment).

### 5. עדכון אחרון בקוד ה-Frontend

עכשיו, אחרי שהקמת את ה-backend, אתה צריך לעדכן את קובץ ה-`index.html` של ה-Mini App כך שיפנה לשרת **שלך** במקום ל-API של גוגל ישירות.

**מה לשנות בקובץ `index.html`:**

1.  **מחק לחלוטין** את משתנה ה-`GOOGLE_API_KEY`. הוא כבר לא נחוץ ב-frontend.
2.  **שנה את כתובות ה-URL** של ה-API כך שיפנו לשרת החדש שלך.

   **החלף את זה:**
   ```javascript
   const IMAGE_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-image-preview:generateContent?key=${GOOGLE_API_KEY}`;
   const TEXT_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${GOOGLE_API_KEY}`;
   
   **בזה:** (החלף בכתובת השרת שלך אחרי שתעלה אותו לאוויר)
   ```javascript
   const BACKEND_URL = 'https://your-backend-server-url.onrender.com'; // Example for Render
   const IMAGE_API_URL = `${BACKEND_URL}/api/edit-image`;
   const TEXT_API_URL = `${BACKEND_URL}/api/get-suggestions`;
   
3.  **עדכן את מבנה הבקשות:** הבקשות (payloads) צריכות להכיל רק את המידע שהשרת שלך מצפה לו (`imageBase64`, `prompt`).

   בפונקציה `callImageApi`, שנה את `payload` ל:
   ```javascript
   const payload = { imageBase64, prompt };
   
   בפונקציה `callTextApi`, שנה את `payload` ל:
    ```javascript
   const payload = { imageBase64 };
   
לאחר שתבצע את השינויים האלה, האפליקציה שלך תהיה מאובטחת, יציבה ומוכנה לשימוש אמיתי.